n <- 100
sample1 <- rnorm(n, 5.5, 2.4)
sample2 <- rbinom(n, 1, 0.68)
# Combine these into one data frame
samples <- data.frame(box=c(rep("box1", times=length(sample1)),
rep("box2", times=length(sample2))),
obs=c(sample1, sample2))
samples
library(dplyr)
# filter
# group_by
# summarise
# mutate
grouped_sample <- group_by(samples, box)
samples.summ <- summarise(grouped_sample, mean=mean(obs), sd=sd(obs))
samples.summ
samples.summ <- mutate(samples.summ, se=sd/sqrt(n))
z <- 1.96
samples.summ$mean[1] - z * samples.summ$se[1] # lb_box1
samples.summ$mean[1] + z * samples.summ$se[1] # ub_box1
samples.summ$mean[2] - z * samples.summ$se[2] # lb_box2
samples.summ$mean[2] + z * samples.summ$se[2] # ub_box2
samples.summ <- mutate(samples.summ, ll.95 = mean-z*se, ul.95 = mean+z*se)
samples.summ
# Your code here
qnorm(.975)
# Your code here
qnorm(.95)
qnorm(.995)
# Your code here
z90 <- qnorm(.95)
z99 <- qnorm(.995)
samples.summ$mean[1] - z90 * samples.summ$se[1] # lb_box1
samples.summ$mean[1] + z90 * samples.summ$se[1] # lb_box1
samples.summ$mean[2] - z90 * samples.summ$se[2] # lb_box2
samples.summ$mean[2] + z90 * samples.summ$se[2] # ub_box2
samples.summ$mean[1] - z99 * samples.summ$se[1] # lb_box1
samples.summ$mean[1] + z99 * samples.summ$se[1] # lb_box1
samples.summ$mean[2] - z99 * samples.summ$se[2] # lb_box2
samples.summ$mean[2] + z99 * samples.summ$se[2] # ub_box2
samples.summ
mutate(samples.summ, ll.90 = mean-z90*se, ul.90 = mean+z90*se,
ll.99 = mean-z99*se, ul.99=mean+z99*se)
# Graph our sampling distributions together with middle 95% marked
samples.graph <- ggplot(data = samplings) +
geom_histogram(aes(x = estimate, y = ..density..), binwidth = 0.005) +
facet_wrap(~box, scales="free",
#strip.position = "bottom",
labeller = as_labeller(c(box1 = "Sampling Distribution of X_bar",
box2 = "Sampling Distribution of P_hat") ) ) +
geom_vline(aes(xintercept = mean), samples.summ, colour = "red", linetype = "dashed")+
geom_segment(aes(x=ll.90,xend=ul.90,y=(9/mean),yend=(9/mean)), samples.summ, colour = "red") +
geom_segment(aes(x=ll.95,xend=ul.95,y=(8/mean),yend=(8/mean)), samples.summ, colour = "red") +
geom_segment(aes(x=ll.99,xend=ul.99,y=(7/mean),yend=(7/mean)), samples.summ, colour = "red") +
labs(title = "Sampling Distributions")
library(dplyr)
library(ggplot2)
set.seed(20)
box.size <- 1e5 # Make large boxes of 100,000 individuals
# Make our boxes
box1 <- rnorm(box.size, 5.5, 2.4)
box2 <- rbinom(box.size, 1, 0.68)
# Combine these into one data frame
boxes <- data.frame(box=c(rep("box1", times=length(box1)),
rep("box2", times=length(box2))),
obs=c(box1, box2))
# Get the mean and standard deviation of each box
boxes.summ <- group_by(boxes, box) %>%
summarize(mean = mean(obs),
sd = sd(obs))
# Graph all of our boxes together
boxes.graph <- ggplot(data = boxes) +
geom_histogram(aes(x = obs, y = ..density..), binwidth = 0.1) +
facet_wrap(~box, scales="free") +
geom_vline(aes(xintercept = mean), boxes.summ, colour = "red", linetype = "longdash")+
labs(title = "Box Distributions")
boxes.graph
n <- 100 # Sample size
B <- 10000 # Number of samples to take
sampling1 <- replicate(B, mean(rnorm(n, 5.5, 2.4)))
sampling2 <- replicate(B, mean(rbinom(n, 1, 0.68)))
# Combine these into one data frame
samplings <- data.frame(box=c(rep("box1", times=length(sampling1)),
rep("box2", times=length(sampling2))),
estimate=c(sampling1, sampling2))
# Get the mean and standard deviation of each sampling distribution
samplings.summ <- group_by(samplings, box) %>%
summarize(mean = mean(estimate),
sd = sd(estimate))
# Graph our sampling distributions together
boxes.graph <- ggplot(data = samplings) +
geom_histogram(aes(x = estimate, y = ..density..), binwidth = 0.005) +
facet_wrap(~box, scales="free",
#strip.position = "bottom",
labeller = as_labeller(c(box1 = "Sampling Distribution of X_bar",
box2 = "Sampling Distribution of P_hat") ) ) +
geom_vline(aes(xintercept = mean), samplings.summ, colour = "red", linetype = "solid")+
labs(title = "Sampling Distributions")
boxes.graph
z.95 <- qnorm(0.975)
x <- seq(from = -3, to = 3, by = .01)
std.norm <- data.frame(x = x, y = dnorm(x, mean = 0, sd = 1))
std.norm.graph <- ggplot(std.norm, aes(x = x, y = y)) +
geom_line() +
geom_area(data = subset(std.norm, x >= -z.95 & x < z.95),
aes(y=y), fill = "red", alpha = 0.3) +
geom_vline(xintercept = 0, colour = "red", linetype = "longdash") +
geom_text(aes(x=0.4, label="mu = 0", y=0.41), colour="red") +
geom_vline(xintercept = z.95, colour = "red", linetype = "dashed") +
geom_text(aes(x=2.4, label="z = 1.96", y=0.3), colour="red") +
geom_vline(xintercept = -z.95, colour = "red", linetype = "dashed") +
geom_text(aes(x=-2.4, label="z = -1.96", y=0.3), colour="red") +
geom_text(aes(x=0, label="95%", y=0.1), colour="red", size=20) +
scale_x_continuous(breaks = seq(from = -3, to = 3, by = .5)) +
scale_y_continuous() +
theme_classic() +
ylab("P(Z = z)") + xlab("z")
std.norm.graph
samplings.summ <- mutate(samplings.summ,
ll = mean - z.95*sd,
ul = mean + z.95*sd)
# Graph our sampling distributions together with middle 95% marked
samplings.graph <- ggplot(data = samplings) +
geom_histogram(aes(x = estimate, y = ..density..), binwidth = 0.005) +
facet_wrap(~box, scales="free",
#strip.position = "bottom",
labeller = as_labeller(c(box1 = "Sampling Distribution of X_bar",
box2 = "Sampling Distribution of P_hat") ) ) +
geom_vline(aes(xintercept = mean), samplings.summ, colour = "red", linetype = "solid") +
geom_vline(aes(xintercept = ll), samplings.summ, colour = "red", linetype = "dashed") +
geom_vline(aes(xintercept = ul), samplings.summ, colour = "red", linetype = "dashed") +
labs(title = "Sampling Distributions")
samplings.graph
# Add a few columns to the samplings data frame:
# - A column with the true parameter for each box
# - A column with the standard deviation of the sampling distribution for each box
# - Two columns for the lower and upper interval limits
# - A logical column indicating whether each interval covers the true parameter
samplings <- mutate(samplings,
parameter = c(rep(5.5, times=length(sampling1)),
rep(0.68, times=length(sampling2))),
sd = c(rep(samplings.summ$sd[1],
times=length(sampling1)),
rep(samplings.summ$sd[2],
times=length(sampling2))),
ll.95 = estimate - z.95*sd,
ul.95 = estimate + z.95*sd,
cover = ll.95 <= parameter & ul.95 >= parameter)
# Take the mean of the cover column to get the proportion of
# sample intervals which capture the true parameter value
group_by(samplings, box) %>%
summarise(coverage = mean(cover))
n <- 100
sample1 <- rnorm(n, 5.5, 2.4)
sample2 <- rbinom(n, 1, 0.68)
# Combine these into one data frame
samples <- data.frame(box=c(rep("box1", times=length(sample1)),
rep("box2", times=length(sample2))),
obs=c(sample1, sample2))
samples
library(dplyr)
# filter
# group_by
# summarise
# mutate
grouped_sample <- group_by(samples, box)
samples.summ <- summarise(grouped_sample, mean=mean(obs), sd=sd(obs))
samples.summ
samples.summ <- mutate(samples.summ, se=sd/sqrt(n))
z <- 1.96
samples.summ$mean[1] - z * samples.summ$se[1] # lb_box1
samples.summ$mean[1] + z * samples.summ$se[1] # ub_box1
samples.summ$mean[2] - z * samples.summ$se[2] # lb_box2
samples.summ$mean[2] + z * samples.summ$se[2] # ub_box2
samples.summ <- mutate(samples.summ, ll.95 = mean-z*se, ul.95 = mean+z*se)
samples.summ
# Your code here
z90 <- qnorm(.95)
z99 <- qnorm(.995)
samples.summ$mean[1] - z90 * samples.summ$se[1] # lb_box1
samples.summ$mean[1] + z90 * samples.summ$se[1] # lb_box1
samples.summ$mean[2] - z90 * samples.summ$se[2] # lb_box2
samples.summ$mean[2] + z90 * samples.summ$se[2] # ub_box2
samples.summ$mean[1] - z99 * samples.summ$se[1] # lb_box1
samples.summ$mean[1] + z99 * samples.summ$se[1] # lb_box1
samples.summ$mean[2] - z99 * samples.summ$se[2] # lb_box2
samples.summ$mean[2] + z99 * samples.summ$se[2] # ub_box2
mutate(samples.summ, ll.90 = mean-z90*se, ul.90 = mean+z90*se,
ll.99 = mean-z99*se, ul.99=mean+z99*se)
# Graph our sampling distributions together with middle 95% marked
samples.graph <- ggplot(data = samplings) +
geom_histogram(aes(x = estimate, y = ..density..), binwidth = 0.005) +
facet_wrap(~box, scales="free",
#strip.position = "bottom",
labeller = as_labeller(c(box1 = "Sampling Distribution of X_bar",
box2 = "Sampling Distribution of P_hat") ) ) +
geom_vline(aes(xintercept = mean), samples.summ, colour = "red", linetype = "dashed")+
geom_segment(aes(x=ll.90,xend=ul.90,y=(9/mean),yend=(9/mean)), samples.summ, colour = "red") +
geom_segment(aes(x=ll.95,xend=ul.95,y=(8/mean),yend=(8/mean)), samples.summ, colour = "red") +
geom_segment(aes(x=ll.99,xend=ul.99,y=(7/mean),yend=(7/mean)), samples.summ, colour = "red") +
labs(title = "Sampling Distributions")
samples.graph
samplings
# Your code here
z90 <- qnorm(.95)
z99 <- qnorm(.995)
samples.summ$mean[1] - z90 * samples.summ$se[1] # lb_box1
samples.summ$mean[1] + z90 * samples.summ$se[1] # lb_box1
samples.summ$mean[2] - z90 * samples.summ$se[2] # lb_box2
samples.summ$mean[2] + z90 * samples.summ$se[2] # ub_box2
samples.summ$mean[1] - z99 * samples.summ$se[1] # lb_box1
samples.summ$mean[1] + z99 * samples.summ$se[1] # lb_box1
samples.summ$mean[2] - z99 * samples.summ$se[2] # lb_box2
samples.summ$mean[2] + z99 * samples.summ$se[2] # ub_box2
samples.summ <- mutate(samples.summ, ll.90 = mean-z90*se, ul.90 = mean+z90*se,
ll.99 = mean-z99*se, ul.99=mean+z99*se)
# Graph our sampling distributions together with middle 95% marked
samples.graph <- ggplot(data = samplings) +
geom_histogram(aes(x = estimate, y = ..density..), binwidth = 0.005) +
facet_wrap(~box, scales="free",
#strip.position = "bottom",
labeller = as_labeller(c(box1 = "Sampling Distribution of X_bar",
box2 = "Sampling Distribution of P_hat") ) ) +
geom_vline(aes(xintercept = mean), samples.summ, colour = "red", linetype = "dashed")+
geom_segment(aes(x=ll.90,xend=ul.90,y=(9/mean),yend=(9/mean)), samples.summ, colour = "red") +
geom_segment(aes(x=ll.95,xend=ul.95,y=(8/mean),yend=(8/mean)), samples.summ, colour = "red") +
geom_segment(aes(x=ll.99,xend=ul.99,y=(7/mean),yend=(7/mean)), samples.summ, colour = "red") +
labs(title = "Sampling Distributions")
samples.graph
library(readxl)
totals <- read_xlsx(file.path("..", "practiceBYU", "practiceDataRaw.xlsx"),
sheet = "TOTALS & AVERAGES")
totals <- totals[5:which(totals$...3 == "TEAM")[1],]
for (i in 1:length(totals$`BASKETBALL  PLAYING  STATISTICS`)) {
if ((i %% 2) == 0) {
if (!is.na(totals$...2[i])) {
totals$...2[i-1] <- paste(totals$...2[i-1], totals$...2[i])
}
}
}
totals <- totals[seq(1, length(totals$`BASKETBALL  PLAYING  STATISTICS`), 2),]
totals$...2[length(totals$...2)] <- "TEAM"
totals <- totals[-which(is.na(totals$...2)),]
totals <- totals[-1,-c(3, 4, 6, 8, seq(11, 21, 2), 25:31, seq(33, 61, 2))]
colnames(totals) <- c("No.", "Name", "Games", "Starts", "Fouls", "DREB", "OREB",
"TREB", "TOV", "Steals", "TOVminSTL", "Blocks", "Assists",
"Charges", "TWOpa", "TWOpm", "TWOper", "THREEpa", "THREEpm",
"THREEper", "FGa", "FGm", "FGper", "FTa", "FTm", "FTper",
"TOTa", "TOTm", "TOTper", "Points")
write.csv(totals, file.path("..", "practiceBYU", "practiceDataClean.csv"), row.names = FALSE)
team <- read.csv(file.path("..", "practiceBYU", "team_info.csv"))
totals <- cbind(team[,2:length(team)], totals[-length(totals$Name),])
totals <- totals[,c("Name", "Age", "Pos", "Ft", "Inches", "Exp", "Games", "Starts", "FGm",
"FGa", "FGper", "THREEpm", "THREEpa", "THREEper", "TWOpm", "TWOpa", "TWOper",
"FTm", "FTa", "FTper", "OREB", "DREB", "TREB", "Assists", "Steals", "Blocks",
"TOV", "Fouls", "Points")]
write.csv(totals, file.path("..", "practiceBYU", "practiceBoxScore.csv"), row.names = FALSE)
library(readxl)
library(readxl)
assertthat::assert_that(getwd()=="~/Desktop/curr_Chris/Sportsdada/WBB-Project/practiceBYU")
totals <- read_xlsx(file.path("..", "practiceBYU", "practiceDataRaw.xlsx"),
sheet = "TOTALS & AVERAGES")
totals <- totals[5:which(totals$...3 == "TEAM")[1],]
for (i in 1:length(totals$`BASKETBALL  PLAYING  STATISTICS`)) {
if ((i %% 2) == 0) {
if (!is.na(totals$...2[i])) {
totals$...2[i-1] <- paste(totals$...2[i-1], totals$...2[i])
}
}
}
totals <- totals[seq(1, length(totals$`BASKETBALL  PLAYING  STATISTICS`), 2),]
totals$...2[length(totals$...2)] <- "TEAM"
totals <- totals[-which(is.na(totals$...2)),]
totals <- totals[-1,-c(3, 4, 6, 8, seq(11, 21, 2), 25:31, seq(33, 61, 2))]
colnames(totals) <- c("No.", "Name", "Games", "Starts", "Fouls", "DREB", "OREB",
"TREB", "TOV", "Steals", "TOVminSTL", "Blocks", "Assists",
"Charges", "TWOpa", "TWOpm", "TWOper", "THREEpa", "THREEpm",
"THREEper", "FGa", "FGm", "FGper", "FTa", "FTm", "FTper",
"TOTa", "TOTm", "TOTper", "Points")
write.csv(totals, file.path("..", "practiceBYU", "practiceDataClean.csv"), row.names = FALSE)
team <- read.csv(file.path("..", "practiceBYU", "team_info.csv"))
totals <- cbind(team[,2:length(team)], totals[-length(totals$Name),])
totals <- totals[,c("Name", "Age", "Pos", "Ft", "Inches", "Exp", "Games", "Starts", "FGm",
"FGa", "FGper", "THREEpm", "THREEpa", "THREEper", "TWOpm", "TWOpa", "TWOper",
"FTm", "FTa", "FTper", "OREB", "DREB", "TREB", "Assists", "Steals", "Blocks",
"TOV", "Fouls", "Points")]
write.csv(totals, file.path("..", "practiceBYU", "practiceBoxScore.csv"), row.names = FALSE)
# assertthat::assert_that(getwd()=="~/Desktop/curr_Chris/Sportsdada/WBB-Project/practiceBYU")
setwd("~/Desktop/curr_Chris/Sportsdada/WBB-Project/practiceBYU")
library(readxl)
# assertthat::assert_that(getwd()=="~/Desktop/curr_Chris/Sportsdada/WBB-Project/practiceBYU")
setwd("~/Desktop/curr_Chris/Sportsdada/WBB-Project/practiceBYU")
totals <- read_xlsx(file.path("..", "practiceBYU", "practiceDataRaw.xlsx"),
sheet = "TOTALS & AVERAGES")
totals <- totals[5:which(totals$...3 == "TEAM")[1],]
for (i in 1:length(totals$`BASKETBALL  PLAYING  STATISTICS`)) {
if ((i %% 2) == 0) {
if (!is.na(totals$...2[i])) {
totals$...2[i-1] <- paste(totals$...2[i-1], totals$...2[i])
}
}
}
totals <- totals[seq(1, length(totals$`BASKETBALL  PLAYING  STATISTICS`), 2),]
totals$...2[length(totals$...2)] <- "TEAM"
totals <- totals[-which(is.na(totals$...2)),]
totals <- totals[-1,-c(3, 4, 6, 8, seq(11, 21, 2), 25:31, seq(33, 61, 2))]
colnames(totals) <- c("No.", "Name", "Games", "Starts", "Fouls", "DREB", "OREB",
"TREB", "TOV", "Steals", "TOVminSTL", "Blocks", "Assists",
"Charges", "TWOpa", "TWOpm", "TWOper", "THREEpa", "THREEpm",
"THREEper", "FGa", "FGm", "FGper", "FTa", "FTm", "FTper",
"TOTa", "TOTm", "TOTper", "Points")
write.csv(totals, file.path("..", "practiceBYU", "practiceDataClean.csv"), row.names = FALSE)
team <- read.csv(file.path("..", "practiceBYU", "team_info.csv"))
totals <- cbind(team[,2:length(team)], totals[-length(totals$Name),])
totals <- totals[,c("Name", "Age", "Pos", "Ft", "Inches", "Exp", "Games", "Starts", "FGm",
"FGa", "FGper", "THREEpm", "THREEpa", "THREEper", "TWOpm", "TWOpa", "TWOper",
"FTm", "FTa", "FTper", "OREB", "DREB", "TREB", "Assists", "Steals", "Blocks",
"TOV", "Fouls", "Points")]
write.csv(totals, file.path("..", "practiceBYU", "practiceBoxScore.csv"), row.names = FALSE)
View(totals)
totals[-13, ]
totals <- totals[-13, ]
write.csv(totals, file.path("..", "practiceBYU", "practiceBoxScore.csv"), row.names = FALSE)
View(samplings.graph)
n <- 100
sample1 <- rnorm(n, 5.5, 2.4)
sample2 <- rbinom(n, 1, 0.68)
# Combine these into one data frame
samples <- data.frame(box=c(rep("box1", times=length(sample1)),
rep("box2", times=length(sample2))),
obs=c(sample1, sample2))
samples
library(dplyr)
# filter
# group_by
# summarise
# mutate
grouped_sample <- group_by(samples, box)
samples.summ <- summarise(grouped_sample, mean=mean(obs), sd=sd(obs))
samples.summ
samples.summ <- mutate(samples.summ, se=sd/sqrt(n))
z <- 1.96
samples.summ$mean[1] - z * samples.summ$se[1] # lb_box1
samples.summ$mean[1] + z * samples.summ$se[1] # ub_box1
samples.summ$mean[2] - z * samples.summ$se[2] # lb_box2
samples.summ$mean[2] + z * samples.summ$se[2] # ub_box2
samples.summ <- mutate(samples.summ, ll.95 = mean-z*se, ul.95 = mean+z*se)
samples.summ
# Your code here
z90 <- qnorm(.95)
z99 <- qnorm(.995)
samples.summ$mean[1] - z90 * samples.summ$se[1] # lb_box1
samples.summ$mean[1] + z90 * samples.summ$se[1] # lb_box1
samples.summ$mean[2] - z90 * samples.summ$se[2] # lb_box2
samples.summ$mean[2] + z90 * samples.summ$se[2] # ub_box2
samples.summ$mean[1] - z99 * samples.summ$se[1] # lb_box1
samples.summ$mean[1] + z99 * samples.summ$se[1] # lb_box1
samples.summ$mean[2] - z99 * samples.summ$se[2] # lb_box2
samples.summ$mean[2] + z99 * samples.summ$se[2] # ub_box2
samples.summ <- mutate(samples.summ, ll.90 = mean-z90*se, ul.90 = mean+z90*se,
ll.99 = mean-z99*se, ul.99=mean+z99*se)
samples.summ
library(readxl)
# assertthat::assert_that(getwd()=="~/Desktop/curr_Chris/Sportsdada/WBB-Project/practiceBYU")
setwd("~/Desktop/curr_Chris/Sportsdada/WBB-Project/practiceBYU")
totals <- read_xlsx(file.path("..", "practiceBYU", "practiceDataRaw.xlsx"),
sheet = "TOTALS & AVERAGES")
totals <- totals[5:which(totals$...3 == "TEAM")[1],]
for (i in 1:length(totals$`BASKETBALL  PLAYING  STATISTICS`)) {
if ((i %% 2) == 0) {
if (!is.na(totals$...2[i])) {
totals$...2[i-1] <- paste(totals$...2[i-1], totals$...2[i])
}
}
}
totals <- totals[seq(1, length(totals$`BASKETBALL  PLAYING  STATISTICS`), 2),]
totals$...2[length(totals$...2)] <- "TEAM"
totals <- totals[-which(is.na(totals$...2)),]
totals <- totals[-1,-c(3, 4, 6, 8, seq(11, 21, 2), 25:31, seq(33, 61, 2))]
colnames(totals) <- c("No.", "Name", "Games", "Starts", "Fouls", "DREB", "OREB",
"TREB", "TOV", "Steals", "TOVminSTL", "Blocks", "Assists",
"Charges", "TWOpa", "TWOpm", "TWOper", "THREEpa", "THREEpm",
"THREEper", "FGa", "FGm", "FGper", "FTa", "FTm", "FTper",
"TOTa", "TOTm", "TOTper", "Points")
write.csv(totals, file.path("..", "practiceBYU", "practiceDataClean.csv"), row.names = FALSE)
team <- read.csv(file.path("..", "practiceBYU", "team_info.csv"))
totals <- cbind(team[,2:length(team)], totals[-length(totals$Name),])
totals <- totals[,c("Name", "Age", "Pos", "Ft", "Inches", "Exp", "Games", "Starts", "FGm",
"FGa", "FGper", "THREEpm", "THREEpa", "THREEper", "TWOpm", "TWOpa", "TWOper",
"FTm", "FTa", "FTper", "OREB", "DREB", "TREB", "Assists", "Steals", "Blocks",
"TOV", "Fouls", "Points")]
# totals <- totals[-13, ]
write.csv(totals, file.path("..", "practiceBYU", "practiceBoxScore.csv"), row.names = FALSE)
sports <- read_excel("~/Downloads/GradSchool/Applications.xlsx", "Sheet1")
View(sports)
other <- read_excel("~/Downloads/GradSchool/Applications.xlsx", "Sheet2")
View(other)
sports <- read_excel("~/Documents/GradSchool/Jobs/Applications.xlsx", "Sheet1")
library(readxl)
sports <- read_excel("~/Documents/GradSchool/Jobs/Applications.xlsx", "Sheet1")
other <- read_excel("~/Documents/GradSchool/Jobs/Applications.xlsx", "Sheet2")
